'use client'

import { useState } from 'react'
import { Card } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Button } from '@/components/ui/button'
import { Search, Copy } from 'lucide-react'
import { useToast } from '@/components/ui/use-toast'

const frameworks = [
  {
    name: 'AIDA',
    description: 'AtenÃ§Ã£o, Interesse, Desejo, AÃ§Ã£o',
    steps: [
      'AtenÃ§Ã£o: Capture a atenÃ§Ã£o do leitor com um headline impactante',
      'Interesse: Desperte o interesse mostrando benefÃ­cios relevantes',
      'Desejo: Crie desejo apresentando casos de sucesso e provas sociais',
      'AÃ§Ã£o: Guie para uma aÃ§Ã£o clara e especÃ­fica'
    ],
    example: `ðŸŽ¯ AtenÃ§Ã£o empreendedores! (A)
Descubra como triplicar suas vendas em 90 dias usando nossa metodologia comprovada. (I)
JÃ¡ ajudamos mais de 1000 empresÃ¡rios a alcanÃ§arem resultados extraordinÃ¡rios. (D)
Clique agora e agende sua consultoria gratuita! (A)`
  },
  {
    name: 'PAS',
    description: 'Problema, AgitaÃ§Ã£o, SoluÃ§Ã£o',
    steps: [
      'Problema: Identifique a dor do seu pÃºblico',
      'AgitaÃ§Ã£o: Amplifique o problema e suas consequÃªncias',
      'SoluÃ§Ã£o: Apresente sua soluÃ§Ã£o como a resposta ideal'
    ],
    example: `Cansado de perder vendas por falta de estratÃ©gia? (P)
A cada dia que passa, seus concorrentes estÃ£o conquistando mais clientes enquanto vocÃª continua estagnado. (A)
Nosso programa de mentoria vai te ensinar o passo a passo para criar um funil de vendas lucrativo! (S)`
  },
  {
    name: 'FAB',
    description: 'CaracterÃ­sticas, BenefÃ­cios, Provas',
    steps: [
      'Features: Liste as principais caracterÃ­sticas',
      'Advantages: Mostre as vantagens de cada caracterÃ­stica',
      'Benefits: Explique os benefÃ­cios reais para o cliente'
    ],
    example: `âœ¨ Plataforma all-in-one (F)
Gerencie todos seus projetos em um sÃ³ lugar, economizando tempo e recursos (A)
Aumente sua produtividade em atÃ© 3x e foque no que realmente importa (B)`
  },
  {
    name: '4 Ps',
    description: 'Problema, Promessa, Prova, Proposta',
    steps: [
      'Picture: Descreva o cenÃ¡rio atual',
      'Promise: FaÃ§a uma promessa poderosa',
      'Prove: Comprove sua promessa',
      'Push: Incentive a aÃ§Ã£o'
    ],
    example: `Sua empresa estÃ¡ perdendo dinheiro com marketing ineficiente? (P)
Garanto que vocÃª vai dobrar seu ROI em 60 dias ou menos (P)
Veja como mais de 500 empresas jÃ¡ alcanÃ§aram esse resultado (P)
Comece agora com 50% de desconto na primeira mensalidade (P)`
  },
  {
    name: 'BAB',
    description: 'Before-After-Bridge',
    steps: [
      'Before: Mostre a situaÃ§Ã£o atual',
      'After: Pinte o cenÃ¡rio ideal',
      'Bridge: Explique como chegar lÃ¡'
    ],
    example: `VocÃª estÃ¡ lutando para conseguir clientes nas redes sociais? (B)
Imagine ter uma agenda cheia de clientes ideais todos os meses (A)
Nosso mÃ©todo vai te ensinar o passo a passo para fazer essa transformaÃ§Ã£o (B)`
  }
]

export function CopyFrameworks() {
  const [searchTerm, setSearchTerm] = useState('')
  const { toast } = useToast()

  const handleCopy = async (text: string) => {
    await navigator.clipboard.writeText(text)
    toast({
      title: 'Copiado!',
      description: 'Exemplo copiado para a Ã¡rea de transferÃªncia.',
    })
  }

  const filteredFrameworks = frameworks.filter(framework =>
    framework.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    framework.description.toLowerCase().includes(searchTerm.toLowerCase())
  )

  return (
    <div className="space-y-6">
      <div className="relative">
        <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
        <Input
          className="pl-9"
          placeholder="Buscar frameworks..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </div>

      <div className="grid gap-6">
        {filteredFrameworks.map((framework) => (
          <Card key={framework.name} className="p-6">
            <div className="space-y-4">
              <div className="flex items-center justify-between">
                <div>
                  <h3 className="text-lg font-semibold">{framework.name}</h3>
                  <p className="text-sm text-muted-foreground">{framework.description}</p>
                </div>
                <Button
                  variant="ghost"
                  size="icon"
                  onClick={() => handleCopy(framework.example)}
                >
                  <Copy className="h-4 w-4" />
                </Button>
              </div>

              <div className="space-y-2">
                <h4 className="font-medium">Como aplicar:</h4>
                <ul className="list-disc list-inside space-y-1 text-sm">
                  {framework.steps.map((step, index) => (
                    <li key={index}>{step}</li>
                  ))}
                </ul>
              </div>

              <div className="space-y-2">
                <h4 className="font-medium">Exemplo:</h4>
                <Card className="p-4 bg-muted">
                  <p className="text-sm whitespace-pre-line">{framework.example}</p>
                </Card>
              </div>
            </div>
          </Card>
        ))}
      </div>
    </div>
  )
}